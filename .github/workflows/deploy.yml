name: Code Quality Check

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  deploy_project:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Create dummy database
      run: psql -f generate_test_db.sql
      env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: postgres
          # The default PostgreSQL port
          POSTGRES_PORT: 5432

    - name: Check dummy database
      run: psql -c "SELECT table_name FROM information_schema.tables WHERE table_schema='public' AND table_type='BASE TABLE';"
      
    - name: Create Environment
      run: make create-environment
        
    - name: Install requirements
      run: make requirements

    - name: Dev setup
      run: make dev-setup

    - name: Run security check (bandit, pip-audit)
      run: make security-test

    - name: Configure AWS Credentials for PyTest to connect to Totesys
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
             
    - name: Run checks
      run: make run-checks

    - name: Prepare Lambda layers
      run: make layer-setup
             
    - name: Terraform Init
      working-directory: terraform
      run: terraform init
    - name: Terraform Plan    
      working-directory: terraform
      run: terraform plan
    - name: Terraform Apply
      working-directory: terraform
      run: terraform apply -auto-approve
