name: Code Quality Check

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint_and_security:
    runs-on: ubuntu-latest
    steps:
    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$(pwd)/python/lambda1:$(pwd)/python/lambda1/src" >> "$GITHUB_ENV"
      
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 bandit
        pip install pytest
        pip install -r requirements.txt
        
    - name: PipAudit
      uses: pypa/gh-action-pip-audit@v1.1.0
    
    - name: Run PEP 8 compliance check (flake8)
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=79 --statistics

    - name: Run security check (bandit)
      run: |
        bandit . -s B108

    - name: Configure AWS Credentials for PyTest to connect to Totesys
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
             
    - name: Test with pytest
      run: |
          echo $PYTHONPATH
          pytest
    
          - name: Terraform Setup
          uses: hashicorp/setup-terraform@v3
    
    - name: Configure AWS Credentials for PyTest to connect to Totesys
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}


  terraform:
    runs-on: ubuntu-latest
    needs: lint_and_security
    steps:
    - name: Terraform Init
      working-directory: terraform
      run: terraform init
    - name: Terraform Plan    
      working-directory: terraform
      run: terraform plan
    - name: Terraform Apply
      working-directory: terraform
      run: terraform apply -auto-approve
