name: Code Quality Check

on:
  push:
    branches:
      - CICD/-MKDIR-and-YML-files  
      - main
      - CICD-test-py
  pull_request:
    branches:
      - CICD/-MKDIR-and-YML-files 
      - main
      - CICD-test-py


jobs:
  lint_and_security:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 bandit safety
        pip install pytest
        pip install -r requirements.txt

    - name: Run PEP 8 compliance check (flake8)
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=79 --statistics

    - name: Run security check (bandit)
      run: |
        bandit -r . -s B101 -v

    - name: Run dependency vulnerability check (safety)
      uses: pyupio/safety-action@v1
      with:
        api-key: ${{ secrets.SAFETY_API_KEY }}
        


    - name: Run database integration tests
      env:
        DB_USER: ${{ secrets.USERNAME }}
        DB_PASSWORD: ${{ secrets.PASSWORD }}
        DB_HOST: ${{ secrets.HOST }}
        DB_PORT: ${{ secrets.PORT }}
        DB_NAME: ${{ secrets.DBNAME }}
      run: |
        pytest test/integration/test_db_conn.py


    - name: Test with pytest
      run: |
          pytest

    - name: Archive Pytest test report
      uses: actions/upload-artifact@v3
      with:
        name: SuperTest-test-report
        path: report

    - name: Upload Pytest report to GitHub
      uses: actions/upload-artifact@v3
      with:
        name: Pytest-test-report
        path: report
